[{"C:\\Users\\harsh\\todo_fm\\client\\src\\index.js":"1","C:\\Users\\harsh\\todo_fm\\client\\src\\App.js":"2","C:\\Users\\harsh\\todo_fm\\client\\src\\store\\store.js":"3","C:\\Users\\harsh\\todo_fm\\client\\src\\themes.js":"4","C:\\Users\\harsh\\todo_fm\\client\\src\\store\\todosSlice.js":"5","C:\\Users\\harsh\\todo_fm\\client\\src\\store\\filtersSlice.js":"6","C:\\Users\\harsh\\todo_fm\\client\\src\\features\\Footer\\Footer.js":"7","C:\\Users\\harsh\\todo_fm\\client\\src\\features\\Header\\Header.js":"8","C:\\Users\\harsh\\todo_fm\\client\\src\\styles.js":"9","C:\\Users\\harsh\\todo_fm\\client\\src\\features\\Footer\\Filters.js":"10","C:\\Users\\harsh\\todo_fm\\client\\src\\features\\Input\\InputTodo.js":"11","C:\\Users\\harsh\\todo_fm\\client\\src\\features\\Todo\\Todo.js":"12"},{"size":347,"mtime":1650882886396,"results":"13","hashOfConfig":"14"},{"size":1367,"mtime":1650883803673,"results":"15","hashOfConfig":"14"},{"size":292,"mtime":1649561104394,"results":"16","hashOfConfig":"14"},{"size":354,"mtime":1649564427226,"results":"17","hashOfConfig":"14"},{"size":3168,"mtime":1650188465371,"results":"18","hashOfConfig":"14"},{"size":392,"mtime":1649502116825,"results":"19","hashOfConfig":"14"},{"size":1001,"mtime":1650883698526,"results":"20","hashOfConfig":"14"},{"size":692,"mtime":1649561379681,"results":"21","hashOfConfig":"14"},{"size":373,"mtime":1650883251341,"results":"22","hashOfConfig":"14"},{"size":1226,"mtime":1650883697369,"results":"23","hashOfConfig":"14"},{"size":1014,"mtime":1650883771704,"results":"24","hashOfConfig":"14"},{"size":1845,"mtime":1650883811828,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hk8lph",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\harsh\\todo_fm\\client\\src\\index.js",[],[],"C:\\Users\\harsh\\todo_fm\\client\\src\\App.js",["67","68"],[],"// styles\nimport './App.scss'\n\n// components\nimport Header from './features/Header/Header'\nimport InputTodo from './features/Input/InputTodo'\nimport Todo from './features/Todo/Todo'\nimport Footer from './features/Footer/Footer'\n\nimport { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { fetchTodos, selectFilteredTodos } from './store/todosSlice.js'\nimport GlobalStyle from './styles'\nimport themes from './themes.js'\nimport { useEffect } from 'react'\n\nfunction App() {\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTodos())\n  }, [])\n\n  const todos = useSelector(selectFilteredTodos)\n\n  const [theme, setTheme] = useState('light')\n\n  const changeTheme = () => {\n    theme=='dark' ? setTheme('light') : setTheme('dark')\n  }\n\n  return (\n    <div className=\"app\">\n      <ThemeProvider theme={themes[theme]} >\n      \n        <GlobalStyle/>\n        \n        <header>\n\n          <Header\n            theme={theme}\n            changeTheme={changeTheme}\n          />\n\n          <InputTodo/>\n        \n        </header>\n\n        <main>\n\n            { todos.map(todo => <Todo key={todo.id} todo={todo} />) }\n\n        </main>\n\n        <footer>\n\n          <Footer n={todos.length} />\n\n        </footer>\n\n      </ThemeProvider>\n    </div>\n  )\n}\n\nexport default App;\n","C:\\Users\\harsh\\todo_fm\\client\\src\\store\\store.js",[],[],"C:\\Users\\harsh\\todo_fm\\client\\src\\themes.js",[],[],"C:\\Users\\harsh\\todo_fm\\client\\src\\store\\todosSlice.js",["69","70","71"],[],"import { createSlice, createSelector, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nconst initialState = {\r\n    status: 'idle',\r\n    entities: {},\r\n}\r\n\r\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\r\n    const res = await axios.get('http://localhost:5000/todos')\r\n    return res.data\r\n})\r\n\r\nexport const addNewTodo = createAsyncThunk('todos/addNewTodo', async todo => {\r\n    const res = await axios.post('http://localhost:5000/todo', todo)\r\n    return res.data \r\n})\r\n\r\nexport const toggleTodo = createAsyncThunk('todos/toggleTodo', async todo => {\r\n    const res = await axios.put('http://localhost:5000/todo', todo)\r\n    return res.data \r\n})\r\n\r\nexport const deleteTodo = createAsyncThunk('todos/deleteTodo', async id => {\r\n    const res = await axios.delete('http://localhost:5000/todo/'+id)\r\n    return res.data\r\n})\r\n\r\nexport const deleteCompletedTodos = createAsyncThunk('todos/deleteCompletedTodos', async () => {\r\n    const res = await axios.delete('http://localhost:5000/todos')\r\n    return res.data\r\n})\r\n\r\nconst todosSlice = createSlice({\r\n    name: 'todos',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: builder => {\r\n        builder\r\n            .addCase(fetchTodos.pending, (state, action) => {\r\n                state.status = 'loading'\r\n            })\r\n            .addCase(fetchTodos.fulfilled, (state, action) => {\r\n                let todos = {}\r\n                action.payload.forEach(todo => {\r\n                    todos[todo._id] = todo\r\n                })\r\n                state.entities = todos \r\n                state.status = 'idle'\r\n            })\r\n            .addCase(addNewTodo.fulfilled, (state, action) => {\r\n                let todo = action.payload\r\n                state.entities[todo._id] = todo\r\n            })\r\n            .addCase(toggleTodo.fulfilled, (state, action) => {\r\n                let id = action.payload\r\n                state.entities[id].completed = !state.entities[id].completed\r\n            })\r\n            .addCase(deleteTodo.fulfilled, (state, action) => {\r\n                let id = action.payload\r\n                id && delete state.entities[id]\r\n            })\r\n            .addCase(deleteCompletedTodos.fulfilled, (state, action) => {\r\n                let res = action.payload\r\n                res && \r\n                    Object.values(state.entities).forEach(todo => {\r\n                        if(todo.completed) {\r\n                            delete state.entities[todo._id]\r\n                        }\r\n                    })\r\n            })\r\n    }\r\n})\r\n\r\nexport default todosSlice.reducer\r\n\r\n// selectors \r\nexport const selectFilteredTodos = createSelector(\r\n    state => state.todos.entities,\r\n    state => state.filters.status,\r\n    (todos, filter) => {\r\n        if(filter=='all') {\r\n            return Object.values(todos)\r\n        }\r\n        if(filter=='active') {\r\n            let list = Object.values(todos).filter(todo => !todo.completed)\r\n            return list \r\n        }\r\n        if(filter=='completed') {\r\n            let list = Object.values(todos).filter(todo => todo.completed)\r\n            return list \r\n        }\r\n    }\r\n)","C:\\Users\\harsh\\todo_fm\\client\\src\\store\\filtersSlice.js",[],[],"C:\\Users\\harsh\\todo_fm\\client\\src\\features\\Footer\\Footer.js",[],[],"C:\\Users\\harsh\\todo_fm\\client\\src\\features\\Header\\Header.js",["72"],[],"// styles\r\nimport './Header.scss'\r\n\r\n// icons\r\nimport LightModeIcon from '@mui/icons-material/LightMode'\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode'\r\n\r\nfunction Header(props) {\r\n\r\n    const changeTheme = () => {\r\n        props.changeTheme()\r\n    }\r\n\r\n    return (\r\n        <div className='header'>\r\n            \r\n            <h1 className='header__title'>\r\n                todo\r\n            </h1>\r\n\r\n            <div\r\n                className='header__themeBtn'\r\n                onClick={changeTheme}\r\n            >\r\n                { props.theme=='dark' ? <LightModeIcon/> : <DarkModeIcon/> }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","C:\\Users\\harsh\\todo_fm\\client\\src\\styles.js",[],[],"C:\\Users\\harsh\\todo_fm\\client\\src\\features\\Footer\\Filters.js",["73","74","75"],[],"// styles\r\nimport './Filters.scss'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { filterChanged } from '../../store/filtersSlice'\r\n\r\nfunction Filters() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const filter = useSelector(state => state.filters.status)\r\n\r\n    // change current selected status\r\n    const changeFilter = (e) => {\r\n        dispatch(filterChanged(e.target.getAttribute('data-val')))\r\n    }\r\n\r\n    return (\r\n        <div className='filters'>\r\n    \r\n            <span \r\n                className={`filter ${filter=='all' && 'active'}`}\r\n                data-val='all'\r\n                onClick={changeFilter}\r\n            >\r\n                all\r\n            </span>\r\n\r\n            <span \r\n                className={`filter ${filter=='active' && 'active'}`}\r\n                data-val='active'\r\n                onClick={changeFilter}\r\n            >\r\n                active\r\n            </span>\r\n\r\n            <span \r\n                className={`filter ${filter=='completed' && 'active'}`}\r\n                data-val='completed'\r\n                onClick={changeFilter}\r\n            >\r\n                completed\r\n            </span>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters","C:\\Users\\harsh\\todo_fm\\client\\src\\features\\Input\\InputTodo.js",["76","77","78"],[],"// styles\r\nimport './InputTodo.scss'\r\n\r\nimport { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addNewTodo } from '../../store/todosSlice'\r\n\r\nfunction InputTodo() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [todo, setTodo] = useState('')\r\n\r\n    const changeHandler = (e) => {\r\n        setTodo(e.target.value)\r\n    }\r\n\r\n    // adds a new todo \r\n    const submitFunc = (e) => {\r\n        if(e.keyCode==13 && todo!=0) {\r\n\r\n            let id = Date.now() + Math.floor(Math.random()*Date.now()+1)\r\n            dispatch(addNewTodo({\r\n                completed: false,\r\n                text: todo,\r\n            }))\r\n\r\n            setTodo('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='inputTodo'>\r\n            \r\n            <input\r\n                value={todo}\r\n                onChange={changeHandler}\r\n                onKeyDown={submitFunc}\r\n                placeholder='Create a new todo...'\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputTodo","C:\\Users\\harsh\\todo_fm\\client\\src\\features\\Todo\\Todo.js",[],[],{"ruleId":"79","severity":1,"message":"80","line":24,"column":6,"nodeType":"81","endLine":24,"endColumn":8,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":31,"column":10,"nodeType":"85","messageId":"86","endLine":31,"endColumn":12},{"ruleId":"83","severity":1,"message":"84","line":82,"column":18,"nodeType":"85","messageId":"86","endLine":82,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":85,"column":18,"nodeType":"85","messageId":"86","endLine":85,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":89,"column":18,"nodeType":"85","messageId":"86","endLine":89,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":25,"column":30,"nodeType":"85","messageId":"86","endLine":25,"endColumn":32},{"ruleId":"83","severity":1,"message":"84","line":22,"column":44,"nodeType":"85","messageId":"86","endLine":22,"endColumn":46},{"ruleId":"83","severity":1,"message":"84","line":30,"column":44,"nodeType":"85","messageId":"86","endLine":30,"endColumn":46},{"ruleId":"83","severity":1,"message":"84","line":38,"column":44,"nodeType":"85","messageId":"86","endLine":38,"endColumn":46},{"ruleId":"83","severity":1,"message":"84","line":20,"column":21,"nodeType":"85","messageId":"86","endLine":20,"endColumn":23},{"ruleId":"83","severity":1,"message":"87","line":20,"column":33,"nodeType":"85","messageId":"86","endLine":20,"endColumn":35},{"ruleId":"88","severity":1,"message":"89","line":22,"column":17,"nodeType":"90","messageId":"91","endLine":22,"endColumn":19},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["92"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar",{"desc":"93","fix":"94"},"Update the dependencies array to be: [dispatch]",{"range":"95","text":"96"},[646,648],"[dispatch]"]